#!/usr/bin/env bash
set -eou pipefail

# Get absolute path this script is in, for example: /home/$USER/bin
SCRIPTPATH=$(dirname $(readlink -f "$0"))
. $SCRIPTPATH/common

echo -e "Installing system features\n"

if [ ! -f ~/.bash_aliases ]; then

  echo -e "Set up shell environment"
  enter-when-ready

  mkdir -p ~/apps
  mkdir -p ~/bin

  cp $SCRIPTPATH/assets/.profile ~
  cp $SCRIPTPATH/assets/.bash_aliases ~

  # Cron job report wrapper - See ./assets/crontab-template.txt
  cp $SCRIPTPATH/assets/cronic ~/bin

  # Move installed folder
  mv $SCRIPTPATH ~/bin/systra
  ln -s ~/bin/systra/sys ~/bin/sys

  sudo apt-get update
  sudo apt install trash-cli

  echo -e "\nRun the following command: source ~/.profile && sys install\n"
  exit
fi

if [ ! -d /opt/webinoly ]; then

  echo "Install web server - NGINX, MariaDB, PHP"
  echo "This will take a few minutes"
  enter-when-ready

  ### Previously depended on external URL
  # wget -qO weby qrok.es/wy && sudo bash weby 0
  # sudo tar -xf $HOME/webinoly.tar -C /opt/webinoly

  sudo mkdir -p /opt/webinoly

  sudo cp -r $SCRIPTPATH/assets/webinoly/lib /opt/webinoly
  sudo cp -r $SCRIPTPATH/assets/webinoly/usr /opt/webinoly
  sudo cp -r $SCRIPTPATH/assets/webinoly/templates /opt/webinoly

  ### Based on assets/webinoly/weby --->

  sudo mkdir -p /opt/webinoly/templates/source
  sudo find /opt/webinoly -type d -exec chmod 755 {} \;
  sudo find /opt/webinoly -type f -exec chmod 644 {} \;
  sudo chmod -f 744 /opt/webinoly/lib/ex-*

  sudo chmod 755 /opt/webinoly/usr/*
  sudo mv /opt/webinoly/usr/* /usr/bin/

  ### <---

  sudo -u root bash -c 'source /opt/webinoly/lib/general && webinoly -conf-value_app-version=$app_version' &> /dev/null

  # Increase upload limit
  sudo webinoly -conf-value_max-mb-uploads=200 &> /dev/null

  # Disable XMLRPC - See assets/webinoly/lib/install, nginx_optim()
  # Updates /etc/nginx/common/wpcommon.conf, /etc/nginx/common/wpcommon-noauth.conf
  sudo webinoly -conf-value_xmlrpc=blocked &> /dev/null

  # Let user manually enter email
  echo "Email address will be used for sending server error notification - it can be empty"

  # TODO: Read input, skip if empty

  sudo webinoly -email # Saved in /opt/webinoly/webinoly.conf

  # Timezone

  # Check if set automatically to local machine
  TIMEZONE=`cat /etc/timezone`
  if [ ! -z "$TIMEZONE" ]; then
    sudo webinoly -timezone=$TIMEZONE
  else
    # List all available timezones
    # See also https://www.php.net/manual/en/timezones.php
    # Or run: ls /usr/share/zoneinfo
    timedatectl list-timezones --no-pager

    # Let user manually enter timezone
    sudo webinoly -timezone
  fi

  # MariaDB >= 10.6 does not support character set "utf8" (must use utf8md3 or utf8md4), which breaks Duplicator packages from older servers
  sudo stack -mysql-ver=10.5

  # Use PHP 7.4 by default until better support for PHP 8 in WordPress ecosystem
  sudo stack -php-ver=7.4

  sudo stack -lemp

  # Allow SFTP access to www-data user
  sudo webinoly -login-www-data=on

  # Disable HTTP Auth
  sudo httpauth -wp-admin=off

  # Allow default user to edit served files

  # Revert change made by assets/webinoly/lib/install, nginx_optim()
  # When it's set to "no", the umask 022 is interpreted as -rw-r--r--
  # When it's set to "yes", it is interpreted as -rw-rw-r-- (Writable by group)
  # We want the latter, so www-data user (PHP process) can modify files created
  # by other users of the group, i.e, ubuntu
  sudo sed -i '/USERGROUPS_ENAB/c \USERGROUPS_ENAB yes' /etc/login.defs

  sudo usermod -aG www-data $USER

  sudo chown -R www-data:www-data /var/www # Was $USER:www-data

  # All new files and directories created under /var/www are owned by the www-data group.

  sudo chgrp -R www-data /var/www
  sudo chmod -R g+rw /var/www

  sudo find /var/www -type d -exec chmod 2775 {} \;
  sudo find /var/www -type f -exec chmod ug+rw {} \;

  # Increase file watch limit - Helps with remote editing large folders
  # https://code.visualstudio.com/docs/setup/linux#_visual-studio-code-is-unable-to-watch-for-file-changes-in-this-large-workspace-error-enospc
  sudo -u root bash -c 'echo -e "\nfs.inotify.max_user_watches=524288\n" >> /etc/sysctl.conf'
  sudo sysctl -p &> /dev/null

  echo -e "\nIf you need to see MySQL credentials in the future, run: sudo webinoly -dbpass\n"

  # echo -e "\nMake note of the above credentials, then run: sys install\n"
  # exit
fi

if [ ! -f ~/bin/composer ]; then

  echo -e "Install Composer - Package manager for PHP"
  enter-when-ready

  curl https://getcomposer.org/installer -o install-composer.php
  php install-composer.php
  rm install-composer.php
  mv composer.phar ~/bin/composer
fi

if [ ! -f ~/bin/wp ]; then

  echo -e "Install WP-CLI - Command line interface for WordPress"
  enter-when-ready

  curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
  php wp-cli.phar --info
  chmod +x wp-cli.phar
  mv wp-cli.phar ~/bin/wp
  echo
fi

if [ ! -d ~/n ]; then

  echo -e "Install Node.js - JavaScript runtime"
  enter-when-ready

  # sudo apt-get update
  sudo apt-get install build-essential
  curl -L https://git.io/n-install | bash

  echo -e "\nRun the following command: source ~/.profile && sys install\n"
  exit
fi

if [ ! -f ~/n/bin/pm2 ]; then

  echo -e "Install PM2 - Process manager for Node.js"
  enter-when-ready

  npm install pm2@latest -g

  # https://pm2.keymetrics.io/docs/usage/startup/
  pm2 startup || true

  # Copy crontab template, replace placeholders, load cron

  cp $SCRIPTPATH/assets/crontab-template.txt ~/crontab-tmp.txt

  EMAIL=$(sudo webinoly -conf-read=mail) # Mail address from /opt/webinoly/webinoly.conf

  if [ -z "$EMAIL" ]; then
    EMAIL="''" # Empty value for crontab
  fi

  sed -i "s/__USER__/$USER/g" ~/crontab-tmp.txt
  sed -i "s/__EMAIL__/$EMAIL/g" ~/crontab-tmp.txt

  crontab ~/crontab-tmp.txt
  rm ~/crontab-tmp.txt

  # PM2 install ends with command: sudo env PATH=$PATH:/home/$USER/n/bin /home/$USER/.config/yarn/global/node_modules/pm2/bin/pm2 startup systemd -u $USER --hp /home/$USER
  echo -e "\nRun the above command, then: sys install\n"
 /home/ubuntu/n/lib/node_modules/pm2/bin/pm2 startup systemd -u ubuntu --hp /home/ubuntu
  # The following is not necessary because we use "n" to manage Node.js versions,
  # and the symlinked binary is always in the same location
  # echo "If you upgrade Node.js in the future, run: pm2 unstartup && pm2 startup"

  exit
fi

echo -e "System fully installed.\n"
